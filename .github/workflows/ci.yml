# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    # Matrix only controls which TFM-specific sample we invoke
    strategy:
      fail-fast: false
      matrix:
        tfm: [ net6.0, net7.0, net8.0, net9.0, net10.0 ]

    steps:
      - uses: actions/checkout@v3

      # Install every SDK once per job (outside matrix vars)
      - name: Setup .NET SDKs 6/7/8/9
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x
            7.0.x
            8.0.x
            9.0.x
            10.0.x

      # Restore & build all target frameworks
      - name: Restore dependencies
        run: dotnet restore
      - name: Build (Release)
        run: dotnet build --no-restore -c Release

      # Run TimeItSharp tool sample
      - name: Run TimeItSharp sample (${{ matrix.tfm }})
        if: matrix.tfm == 'net6.0'
        run: ./TimeItSharp config-example.json
        working-directory: src/TimeItSharp/bin/Release/${{ matrix.tfm }}

      # Run the engine sample
      - name: Run TimeItSharp engine sample (${{ matrix.tfm }})
        run: ./TimeItSharp.FluentConfiguration.Sample
        working-directory: test/TimeItSharp.FluentConfiguration.Sample/bin/Release/${{ matrix.tfm }}

      # Publish any .nupkg artifacts
      - uses: actions/upload-artifact@v4
        if: matrix.tfm == 'net9.0'
        with:
          name: Nugets
          path: ./**/*.nupkg

  nativeaot:
    name: NativeAOT publish
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            rid: win-x64
          - os: ubuntu-latest
            rid: linux-x64
          - os: ubuntu-latest
            rid: linux-arm64
          - os: macos-latest
            rid: osx-arm64

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET SDK 10
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            10.0.x

      - name: Install NativeAOT prerequisites (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang zlib1g-dev

      - name: Install cross toolchain for linux-arm64
        if: matrix.rid == 'linux-arm64'
        run: |
          sudo apt-get install -y binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu libc6-dev-arm64-cross
          sudo ln -sf /usr/bin/aarch64-linux-gnu-objcopy /usr/local/bin/objcopy

      - name: Restore solution
        run: dotnet restore

      - name: Publish NativeAOT (${{ matrix.rid }})
        run: >
          dotnet publish src/TimeItSharp/TimeItSharp.csproj
          -c Release
          -f net10.0
          -r ${{ matrix.rid }}
          --self-contained true
          -p:AOT=true
          -p:StripSymbols=true

      - uses: actions/upload-artifact@v4
        with:
          name: nativeaot-${{ matrix.rid }}
          path: src/TimeItSharp/bin/Release/net10.0/${{ matrix.rid }}/publish/
